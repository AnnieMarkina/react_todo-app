{"version":3,"sources":["Components/Todos/TodosContainer/TodoItem/TodoItem.js","Components/Todos/TodosContainer/TodosList/TodosList.js","Components/Todos/TodosContainer/ToggleInput/ToggleInput.js","Components/Todos/TodosContainer/TodosContainer.js","Components/Todos/Footer/Footer.js","Components/Todos/TodoInput/TodoInput.js","Components/Todos/Todos.js","App.js","index.js"],"names":["TodoItem","todo","deleteTodo","isCompleted","completedClassToggle","classNames","completed","className","type","id","onClick","checked","onChange","e","htmlFor","text","TodosList","props","todos","map","key","ToggleInput","toggleAllCompleted","isAllCompleted","every","length","TodosContainer","Footer","deleteAllCompleted","showActive","isAll","isActive","showCompleted","showAll","completedTodos","some","todoCount","filter","allSelector","selected","activeSelector","completedSelector","href","TodoInput","state","input","handleAddInputValue","event","preventDefault","addTodo","setState","handleInputChange","value","target","trim","this","onKeyPress","placeholder","React","Component","Todos","allCompleted","handleAddTodo","prevState","push","handleToggleCompletion","index","indexOf","handleDeleteBtn","handleAllCompleted","activeTodos","secondClick","firstClick","handleDeleteAllCompleted","handleActiveFiltering","handleCompletedFiltering","handleAllFiltering","visibleTodos","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.49d39d80.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst TodoItem = ({ todo, deleteTodo, isCompleted }) => {\n  const completedClassToggle = classNames('', { completed: todo.completed });\n\n  return (\n    <li className={completedClassToggle}>\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          id={todo.id}\n          onClick={() => isCompleted(todo.id)}\n          checked={todo.completed}\n          onChange={(e) => {}}\n        />\n        <label htmlFor={todo.id}>{todo.text}</label>\n        <button\n          onClick={() => deleteTodo(todo.id)}\n          type=\"button\"\n          className=\"destroy\"\n        />\n      </div>\n      <input type=\"text\" className=\"edit\" />\n    </li>\n  );\n};\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.string,\n    text: PropTypes.string,\n    completed: PropTypes.bool,\n  }).isRequired,\n  isCompleted: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from '../TodoItem/TodoItem';\n\nconst TodosList = (props) => {\n  const { todos, deleteTodo, isCompleted } = props;\n\n  return (\n    <ul className=\"todo-list\">\n      {todos.map(todo => (\n        <TodoItem\n          key={todo.id}\n          todo={todo}\n          isCompleted={() => isCompleted(todo.id)}\n          deleteTodo={() => deleteTodo(todo.id)}\n        />\n      ))}\n    </ul>\n  );\n};\n\nTodosList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      text: PropTypes.string,\n      completed: PropTypes.bool,\n    }),\n  ).isRequired,\n  isCompleted: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n};\n\nexport default TodosList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ToggleInput = ({ todos, toggleAllCompleted }) => {\n  const isAllCompleted = todos.every(todo => todo.completed === true);\n\n  return (\n    <div>\n      <input\n        onClick={toggleAllCompleted}\n        type=\"checkbox\"\n        id=\"toggle-all\"\n        className=\"toggle-all\"\n        checked={isAllCompleted && todos.length > 0} // fix this\n        onChange={(e) => {}}\n      />\n      <label htmlFor=\"toggle-all\">Mark all as complete</label>\n    </div>\n  );\n};\n\nToggleInput.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      text: PropTypes.string,\n      completed: PropTypes.bool,\n    }),\n  ).isRequired,\n  toggleAllCompleted: PropTypes.func.isRequired,\n};\n\nexport default ToggleInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoList from './TodosList/TodosList';\nimport ToggleInput from './ToggleInput/ToggleInput';\n\nconst TodosContainer = (props) => {\n  const {\n    todos,\n    toggleAllCompleted,\n    isCompleted,\n    deleteTodo,\n  } = props;\n\n  return (\n    <section className=\"main\">\n      {todos.length > 0 && (\n        <ToggleInput\n          todos={todos}\n          toggleAllCompleted={toggleAllCompleted}\n        />\n      )}\n\n      <TodoList\n        todos={todos}\n        isCompleted={isCompleted}\n        deleteTodo={deleteTodo}\n      />\n    </section>\n  );\n};\n\nTodosContainer.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      text: PropTypes.string,\n      completed: PropTypes.bool,\n    }),\n  ).isRequired,\n  toggleAllCompleted: PropTypes.func.isRequired,\n  isCompleted: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n};\n\nexport default TodosContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst Footer = (props) => {\n  const {\n    todos,\n    deleteAllCompleted,\n    showActive,\n    isAll,\n    isActive,\n    isCompleted,\n    showCompleted,\n    showAll,\n  } = props;\n\n  const completedTodos = todos.some(todo => todo.completed === true);\n  const todoCount = todos.filter(todo => !todo.completed).length;\n\n  const allSelector = classNames('', { selected: isAll });\n  const activeSelector = classNames('', { selected: isActive });\n  const completedSelector = classNames('', { selected: isCompleted });\n\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        {todoCount}\n        {' '}\n        items left\n      </span>\n\n      <ul className=\"filters\">\n        <li>\n          <a\n            onClick={showAll}\n            href=\"#/\"\n            className={allSelector}\n          >\n            All\n          </a>\n        </li>\n\n        <li>\n          <a\n            onClick={showActive}\n            href=\"#/active\"\n            className={activeSelector}\n          >\n            Active\n          </a>\n        </li>\n\n        <li>\n          <a\n            onClick={showCompleted}\n            href=\"#/completed\"\n            className={completedSelector}\n          >\n            Completed\n          </a>\n        </li>\n      </ul>\n\n      {completedTodos && (\n        <button\n          onClick={deleteAllCompleted}\n          type=\"button\"\n          className=\"clear-completed\"\n        >\n          Clear completed\n        </button>\n      )}\n    </footer>\n  );\n};\n\nFooter.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      text: PropTypes.string,\n      completed: PropTypes.bool,\n    }),\n  ).isRequired,\n  deleteAllCompleted: PropTypes.func.isRequired,\n  showActive: PropTypes.func.isRequired,\n  isAll: PropTypes.bool.isRequired,\n  isActive: PropTypes.bool.isRequired,\n  isCompleted: PropTypes.bool.isRequired,\n  showCompleted: PropTypes.func.isRequired,\n  showAll: PropTypes.func.isRequired,\n};\n\nexport default Footer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass TodoInput extends React.Component {\n  state = {\n    input: '',\n  };\n\n  handleAddInputValue = (event) => {\n    const { input } = this.state;\n\n    if (event.key === 'Enter' && input) {\n      event.preventDefault();\n\n      this.props.addTodo(input);\n      this.setState({ input: '' });\n    }\n  }\n\n  handleInputChange = (event) => {\n    const { value } = event.target;\n\n    this.setState({\n      input: value.trim(),\n    });\n  }\n\n  render() {\n    const { input } = this.state;\n\n    return (\n      <>\n        <form>\n          <input\n            onKeyPress={this.handleAddInputValue}\n            onChange={this.handleInputChange}\n            value={input}\n            type=\"text\"\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n          />\n        </form>\n      </>\n    );\n  }\n}\n\nTodoInput.propTypes = {\n  addTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoInput;\n","import React from 'react';\nimport TodosContainer from './TodosContainer/TodosContainer';\nimport Footer from './Footer/Footer';\nimport TodoInput from './TodoInput/TodoInput';\n\nclass Todos extends React.Component {\n  state = {\n    todos: [],\n    allCompleted: false,\n    isAll: true,\n    isActive: false,\n    isCompleted: false,\n  };\n\n  handleAddTodo = (todo) => {\n    this.setState((prevState) => {\n      const { todos } = this.state;\n\n      todos.push({\n        id: todos.length === 0 ? `todo-${0}` : `todo-${todos.length}`,\n        text: todo,\n        completed: false,\n      });\n\n      return todos;\n    });\n  }\n\n  handleToggleCompletion = (id) => {\n    const { todos } = this.state;\n    const index = todos.map(todo => todo.id).indexOf(id);\n\n    this.setState((prevState) => {\n      todos[index].completed = !todos[index].completed;\n\n      return todos;\n    });\n  }\n\n  handleDeleteBtn = (id) => {\n    const { todos } = this.state;\n\n    this.setState({\n      todos: todos.filter(todo => todo.id !== id),\n    });\n  }\n\n  handleAllCompleted = () => {\n    const { todos, allCompleted } = this.state;\n\n    const firstClick = () => {\n      const completedTodos = todos.map((todo) => {\n        if (todo.completed === false) {\n          return {\n            ...todo,\n            completed: true,\n          };\n        }\n\n        return todo;\n      });\n\n      this.setState({\n        todos: [...completedTodos],\n        allCompleted: true,\n      });\n    };\n\n    const secondClick = () => {\n      const activeTodos = todos.map((todo) => {\n        if (todo.completed === true) {\n          return {\n            ...todo,\n            completed: false,\n          };\n        }\n\n        return todo;\n      });\n\n      this.setState({\n        todos: [...activeTodos],\n        allCompleted: false,\n      });\n    };\n\n    !allCompleted ? firstClick() : secondClick();\n  }\n\n  handleDeleteAllCompleted = () => {\n    const { todos } = this.state;\n\n    this.setState({\n      todos: todos.filter(todo => todo.completed === false),\n    });\n  }\n\n  handleActiveFiltering = () => {\n    this.setState({\n      isAll: false,\n      isActive: true,\n      isCompleted: false,\n    });\n  }\n\n  handleCompletedFiltering = () => {\n    this.setState({\n      isAll: false,\n      isActive: false,\n      isCompleted: true,\n    });\n  }\n\n  handleAllFiltering = () => {\n    this.setState({\n      isAll: true,\n      isActive: false,\n      isCompleted: false,\n    });\n  }\n\n  render() {\n    const {\n      todos,\n      isAll,\n      isActive,\n      isCompleted,\n    } = this.state;\n\n    let visibleTodos = [...todos];\n\n    if (!isAll && isActive && !isCompleted) {\n      visibleTodos = todos.filter(todo => todo.completed === false);\n    }\n\n    if (!isAll && !isActive && isCompleted) {\n      visibleTodos = todos.filter(todo => todo.completed === true);\n    }\n\n    return (\n      <>\n        <section className=\"todoapp\">\n          <header className=\"header\">\n            <h1>todos</h1>\n            <TodoInput addTodo={this.handleAddTodo} />\n          </header>\n\n          <TodosContainer\n            toggleAllCompleted={() => this.handleAllCompleted()}\n            todos={visibleTodos}\n            isCompleted={this.handleToggleCompletion}\n            deleteTodo={this.handleDeleteBtn}\n          />\n\n          {todos.length > 0 && (\n            <Footer\n              todos={todos}\n              isAll={isAll}\n              isActive={isActive}\n              isCompleted={isCompleted}\n              deleteAllCompleted={this.handleDeleteAllCompleted}\n              showAll={this.handleAllFiltering}\n              showActive={this.handleActiveFiltering}\n              showCompleted={this.handleCompletedFiltering}\n            />\n          )}\n\n        </section>\n      </>\n    );\n  }\n}\n\nexport default Todos;\n","import React from 'react';\nimport Todos from './Components/Todos/Todos';\n\nconst App = () => (\n  <section className=\"todoapp\">\n    <Todos />\n  </section>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}
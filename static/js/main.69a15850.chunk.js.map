{"version":3,"sources":["Components/Todos/TodosContainer/TodoItem/TodoItem.js","Components/Todos/TodosContainer/TodosList/TodosList.js","Components/Todos/TodosContainer/TodosContainer.js","Components/Todos/Footer/Footer.js","Components/Todos/TodoInput/TodoInput.js","Components/Todos/Todos.js","App.js","index.js"],"names":["TodoItem","todo","deleteTodo","markCompleted","completedClassToggle","classNames","completed","ifChecked","className","type","id","onClick","defaultChecked","htmlFor","text","TodosList","props","key","TodosContainer","todoObj","isCompleted","toggleAllCompleted","Footer","todos","deleteAllCompleted","showActive","isAll","isActive","showCompleted","showAll","oneTodo","activeTodos","completedTodos","filter","length","handleAllSelector","handleActiveSelector","handleCompletedSelector","href","TodoInput","state","input","handleAddInputValue","event","preventDefault","addTodo","setState","handleInputChange","controlledInput","target","value","trim","this","onKeyPress","onChange","placeholder","React","Component","Todos","allCompleted","handleAddTodo","prevState","push","handleToggleCompletion","index","map","indexOf","handleDeleteBtn","handleAllCompleted","forEach","console","log","handleDeleteAllCompleted","filteredTodos","handleActiveFiltering","filteredActiveTodos","handleCompletedFiltering","handleAllFiltering","conditionalRenderingTodos","footer","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.69a15850.chunk.js","sourcesContent":["/* eslint-disable quote-props */\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport classNames from 'classnames';\n\nconst TodoItem = ({ todo, deleteTodo, markCompleted }) => {\n  const completedClassToggle = classNames('', { 'completed': todo.completed });\n  const ifChecked = todo.completed ? 'checked' : null;\n\n  return (\n    <li className={completedClassToggle}>\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          id={todo.id}\n          onClick={markCompleted}\n          defaultChecked={ifChecked}\n        />\n        <label htmlFor={todo.id}>{todo.text}</label>\n        <button\n          onClick={deleteTodo}\n          type=\"button\"\n          className=\"destroy\"\n        />\n      </div>\n      <input type=\"text\" className=\"edit\" />\n    </li>\n  );\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport TodoItem from '../TodoItem/TodoItem';\n\nconst TodosList = (props) => {\n  const { todo, deleteTodo, markCompleted } = props;\n\n  return (\n    <ul className=\"todo-list\">\n      <TodoItem\n        key={todo.id}\n        todo={todo}\n        deleteTodo={deleteTodo}\n        markCompleted={markCompleted}\n      />\n    </ul>\n  );\n};\n\nexport default TodosList;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport TodoList from './TodosList/TodosList';\n\nconst TodosContainer = (props) => {\n  const { todoObj, isCompleted, deleteTodo, toggleAllCompleted } = props;\n\n  return (\n    <section className=\"main\">\n      <input\n        onClick={toggleAllCompleted}\n        type=\"checkbox\"\n        id=\"toggle-all\"\n        className=\"toggle-all\"\n      />\n      <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n      <TodoList\n        todo={todoObj}\n        deleteTodo={deleteTodo}\n        markCompleted={isCompleted}\n      />\n\n      {/* <ul className=\"todo-list\">\n        <TodoItem\n          key={todoObj.id}\n          todo={todoObj}\n          deleteTodo={deleteTodo}\n          markCompleted={isCompleted}\n        />\n      </ul> */}\n\n      {/* <ul className=\"todo-list\">\n\n        <li>\n          <div className=\"view\">\n            <input type=\"checkbox\" className=\"toggle\" id=\"todo-1\" />\n            <label htmlFor=\"todo-1\">111</label>\n            <button type=\"button\" className=\"destroy\" />\n          </div>\n          <input type=\"text\" className=\"edit\" />\n        </li>\n\n        <li className=\"completed\">\n          <div className=\"view\">\n            <input type=\"checkbox\" className=\"toggle\" id=\"todo-2\" />\n            <label htmlFor=\"todo-2\">222</label>\n            <button type=\"button\" className=\"destroy\" />\n          </div>\n          <input type=\"text\" className=\"edit\" />\n        </li>\n\n        <li className=\"editing\">\n          <div className=\"view\">\n            <input type=\"checkbox\" className=\"toggle\" id=\"todo-3\" />\n            <label htmlFor=\"todo-3\">333</label>\n            <button type=\"button\" className=\"destroy\" />\n          </div>\n          <input type=\"text\" className=\"edit\" />\n        </li>\n      </ul> */}\n    </section>\n  );\n};\n\nexport default TodosContainer;\n","import React from 'react';\nimport classNames from 'classnames';\n\nconst Footer = (props) => {\n  const { todos,\n    deleteAllCompleted,\n    showActive,\n    isAll,\n    isActive,\n    isCompleted,\n    showCompleted,\n    showAll,\n    activeTodos,\n    completedTodos } = props;\n\n  const oneTodo = todos.filter(todo => !todo.completed).length;\n  const handleAllSelector = classNames('', { 'selected': isAll });\n  const handleActiveSelector = classNames('', { 'selected': isActive });\n  const handleCompletedSelector = classNames('', { 'selected': isCompleted });\n\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        {oneTodo} items left </span>\n\n      <ul className=\"filters\">\n        <li onClick={showAll}>\n          <a href=\"#/\" className={handleAllSelector}>All</a>\n        </li>\n\n        <li onClick={showActive}>\n          <a href=\"#/active\" className={handleActiveSelector}>Active</a>\n        </li>\n\n        <li onClick={showCompleted}>\n          <a href=\"#/completed\" className={handleCompletedSelector}>Completed</a>\n        </li>\n      </ul>\n\n      {todos.length > 0 ? (\n        <button\n          onClick={deleteAllCompleted}\n          type=\"button\"\n          className=\"clear-completed\"\n        >\n          Clear completed\n        </button>\n      ) : null}\n    </footer>\n  );\n};\n\nexport default Footer;\n","/* eslint-disable react/prop-types */\nimport React from 'react';\n\nclass TodoInput extends React.Component {\n  state = {\n    input: '',\n  };\n\n  handleAddInputValue = (event) => {\n    const { input } = this.state;\n\n    if (event.key === 'Enter' && input) {\n      event.preventDefault();\n      this.props.addTodo(input);\n      this.setState({ input: '' });\n    }\n  }\n\n  handleInputChange = (event) => {\n    const controlledInput = (event.target.value).trim();\n\n    this.setState({\n      input: controlledInput,\n    });\n  }\n\n  render() {\n    const { input } = this.state;\n\n    return (\n      <>\n        <form>\n          <input\n            onKeyPress={this.handleAddInputValue}\n            onChange={this.handleInputChange}\n            value={input}\n            type=\"text\"\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n          />\n        </form>\n      </>\n    );\n  }\n}\n\nexport default TodoInput;\n","import React from 'react';\nimport TodosContainer from './TodosContainer/TodosContainer';\nimport Footer from './Footer/Footer';\nimport TodoInput from './TodoInput/TodoInput';\n\nclass Todos extends React.Component {\n  state = {\n    todos: [],\n    activeTodos: [],\n    completedTodos: [],\n    allCompleted: false,\n    isAll: true,\n    isActive: false,\n    isCompleted: false,\n  };\n\n  handleAddTodo = (todo) => {\n    this.setState((prevState) => {\n      const { todos } = this.state;\n\n      todos.push({\n        id: todos.length === 0 ? `todo-${0}` : `todo-${todos.length}`,\n        text: todo,\n        completed: false,\n      });\n\n      return todos;\n    });\n  }\n\n  handleToggleCompletion = (id) => {\n    const { todos } = this.state;\n    const index = todos.map(todo => todo.id).indexOf(id);\n\n    const ifCompleted = todos[index].completed;\n\n    const setIncompleted = () => {\n      this.setState((prevState) => {\n        todos[index].completed = false;\n\n        return todos;\n      });\n    };\n\n    const setCompleted = () => {\n      this.setState((prevState) => {\n        todos[index].completed = true;\n\n        return todos;\n      });\n    };\n\n    ifCompleted ? setIncompleted() : setCompleted();\n  }\n\n  handleDeleteBtn = (id) => {\n    const { todos } = this.state;\n    const index = todos.map(todo => todo.id).indexOf(id);\n\n    this.setState((prevState) => {\n      delete todos[index];\n\n      return todos;\n    });\n  }\n\n  handleAllCompleted = () => {\n    const { todos, allCompleted } = this.state;\n\n    const firstClick = () => {\n      todos.forEach(todo => (todo.completed = true));\n      this.setState({\n        todos,\n        allCompleted: true,\n      });\n      console.log(todos[0].completed);\n    };\n\n    const secondClick = () => {\n      todos.forEach(todo => (todo.completed = false));\n      this.setState({\n        todos,\n        allCompleted: false,\n      });\n      console.log(todos[0].completed);\n    };\n\n    !allCompleted ? firstClick() : secondClick();\n  }\n\n  handleDeleteAllCompleted = () => {\n    const { todos } = this.state;\n\n    const filteredTodos = todos.filter(todo => !todo.completed);\n\n    this.setState(prevState => ({\n      completedTodos: [],\n      todos: filteredTodos,\n    }));\n  }\n\n  handleActiveFiltering = () => {\n    const { todos } = this.state;\n\n    const filteredActiveTodos = todos.filter(todo => !todo.completed);\n\n    this.setState(prevState => ({\n      activeTodos: filteredActiveTodos,\n      isAll: false,\n      isActive: true,\n      isCompleted: false,\n    }));\n  }\n\n  handleCompletedFiltering = () => {\n    const { todos } = this.state;\n\n    const filteredActiveTodos = todos.filter(todo => todo.completed);\n\n    this.setState(prevState => ({\n      completedTodos: filteredActiveTodos,\n      isAll: false,\n      isActive: false,\n      isCompleted: true,\n    }));\n  }\n\n  handleAllFiltering = () => {\n    const { todos } = this.state;\n\n    this.setState(prevState => ({\n      todos,\n      isAll: true,\n      isActive: false,\n      isCompleted: false,\n    }));\n  }\n\n  render() {\n    const { todos,\n      isAll,\n      isActive,\n      isCompleted,\n      activeTodos,\n      completedTodos } = this.state;\n\n    let conditionalRenderingTodos = todos;\n\n    if (!isAll && isActive && !isCompleted) {\n      conditionalRenderingTodos = activeTodos;\n    }\n\n    if (!isAll && !isActive && isCompleted) {\n      conditionalRenderingTodos = completedTodos;\n    }\n\n    let footer = null;\n\n    if (todos.length !== 0) {\n      footer = (\n        <Footer\n          todos={todos}\n          isAll={isAll}\n          isActive={isActive}\n          isCompleted={isCompleted}\n          activeTodos={activeTodos}\n          completedTodos={completedTodos}\n          deleteAllCompleted={this.handleDeleteAllCompleted}\n          showAll={this.handleAllFiltering}\n          showActive={this.handleActiveFiltering}\n          showCompleted={this.handleCompletedFiltering}\n        />\n      );\n    }\n\n    return (\n      <>\n        <section className=\"todoapp\">\n          <header className=\"header\">\n            <h1>todos</h1>\n            <TodoInput addTodo={this.handleAddTodo} />\n          </header>\n\n          {conditionalRenderingTodos.map(todo => (\n            <TodosContainer\n              key={todo.id}\n              todoObj={todo}\n              isCompleted={() => this.handleToggleCompletion(todo.id)}\n              deleteTodo={() => this.handleDeleteBtn(todo.id)}\n              toggleAllCompleted={() => this.handleAllCompleted()}\n            />\n          ))}\n\n          {footer}\n\n        </section>\n      </>\n    );\n  }\n}\n\nexport default Todos;\n","import React from 'react';\nimport Todos from './Components/Todos/Todos';\n\nconst App = () => (\n  <section className=\"todoapp\">\n    <Todos />\n  </section>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}
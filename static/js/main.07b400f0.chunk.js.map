{"version":3,"sources":["Components/Todos/TodosContainer/TodoItem/TodoItem.js","Components/Todos/TodosContainer/TodosList/TodosList.js","Components/Todos/TodosContainer/ToggleInput/ToggleInput.js","Components/Todos/TodosContainer/TodosContainer.js","Components/Todos/Footer/Footer.js","Components/Todos/TodoInput/TodoInput.js","Components/Todos/Todos.js","App.js","index.js"],"names":["TodoItem","todo","deleteTodo","isCompleted","completedClassToggle","classNames","completed","className","type","id","onClick","checked","onChange","e","htmlFor","text","TodosList","props","todos","map","key","ToggleInput","toggleAllCompleted","TodosContainer","Footer","deleteAllCompleted","showActive","isAll","isActive","showCompleted","showAll","oneTodo","filter","length","handleAllSelector","handleActiveSelector","handleCompletedSelector","href","TodoInput","state","input","handleAddInputValue","event","preventDefault","addTodo","setState","handleInputChange","controlledInput","target","value","trim","this","onKeyPress","placeholder","React","Component","Todos","activeTodos","completedTodos","allCompleted","handleAddTodo","prevState","push","handleToggleCompletion","index","indexOf","handleDeleteBtn","handleAllCompleted","secondClick","firstClick","handleDeleteAllCompleted","filteredTodos","handleActiveFiltering","filteredActiveTodos","handleCompletedFiltering","handleAllFiltering","conditionalRenderingTodos","footer","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.07b400f0.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst TodoItem = ({ todo, deleteTodo, isCompleted }) => {\n  // eslint-disable-next-line quote-props\n  const completedClassToggle = classNames('', { 'completed': todo.completed });\n\n  return (\n    <li className={completedClassToggle}>\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          id={todo.id}\n          onClick={isCompleted}\n          checked={todo.completed}\n          onChange={(e) => {}}\n        />\n        <label htmlFor={todo.id}>{todo.text}</label>\n        <button\n          onClick={deleteTodo}\n          type=\"button\"\n          className=\"destroy\"\n        />\n      </div>\n      <input type=\"text\" className=\"edit\" />\n    </li>\n  );\n};\n\nTodoItem.propTypes = {\n  todo: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      text: PropTypes.string,\n      completed: PropTypes.bool,\n    }),\n  ).isRequired,\n  isCompleted: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from '../TodoItem/TodoItem';\n\nconst TodosList = (props) => {\n  const { todos, deleteTodo, isCompleted } = props;\n\n  return (\n    <ul className=\"todo-list\">\n      {todos.map(todo => (\n        <TodoItem\n          key={todo.id}\n          todo={todo}\n          isCompleted={() => isCompleted(todo.id)}\n          deleteTodo={() => deleteTodo(todo.id)}\n        />\n      ))}\n    </ul>\n  );\n};\n\nTodosList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      text: PropTypes.string,\n      completed: PropTypes.bool,\n    }),\n  ).isRequired,\n  isCompleted: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n};\n\nexport default TodosList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ToggleInput = ({ toggleAllCompleted }) => (\n  <>\n    <input\n      onClick={toggleAllCompleted}\n      type=\"checkbox\"\n      id=\"toggle-all\"\n      className=\"toggle-all\"\n    />\n    <label htmlFor=\"toggle-all\">Mark all as complete</label>\n  </>\n);\n\nToggleInput.propTypes = {\n  toggleAllCompleted: PropTypes.func.isRequired,\n};\n\nexport default ToggleInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoList from './TodosList/TodosList';\nimport ToggleInput from './ToggleInput/ToggleInput';\n\nconst TodosContainer = (props) => {\n  const { todos,\n    toggleAllCompleted,\n    isCompleted,\n    deleteTodo } = props;\n\n  return (\n    <section className=\"main\">\n      <ToggleInput\n        toggleAllCompleted={toggleAllCompleted}\n      />\n\n      <TodoList\n        todos={todos}\n        isCompleted={isCompleted}\n        deleteTodo={deleteTodo}\n      />\n    </section>\n  );\n};\n\nTodosContainer.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      text: PropTypes.string,\n      completed: PropTypes.bool,\n    }),\n  ).isRequired,\n  toggleAllCompleted: PropTypes.func.isRequired,\n  isCompleted: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n};\n\nexport default TodosContainer;\n","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable react/jsx-one-expression-per-line */\n/* eslint-disable quote-props */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst Footer = (props) => {\n  const { todos,\n    deleteAllCompleted,\n    showActive,\n    isAll,\n    isActive,\n    isCompleted,\n    showCompleted,\n    showAll } = props;\n\n  const oneTodo = todos.filter(todo => !todo.completed).length;\n  const handleAllSelector = classNames('', { 'selected': isAll });\n  const handleActiveSelector = classNames('', { 'selected': isActive });\n  const handleCompletedSelector = classNames('', { 'selected': isCompleted });\n\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        {oneTodo} items left\n      </span>\n\n      <ul className=\"filters\">\n        <li onClick={showAll}>\n          <a href=\"#/\" className={handleAllSelector}>All</a>\n        </li>\n\n        <li onClick={showActive}>\n          <a href=\"#/active\" className={handleActiveSelector}>Active</a>\n        </li>\n\n        <li onClick={showCompleted}>\n          <a href=\"#/completed\" className={handleCompletedSelector}>\n            Completed\n          </a>\n        </li>\n      </ul>\n\n      {todos.length > 0 ? (\n        <button\n          onClick={deleteAllCompleted}\n          type=\"button\"\n          className=\"clear-completed\"\n        >\n          Clear completed\n        </button>\n      ) : null}\n    </footer>\n  );\n};\n\nFooter.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      text: PropTypes.string,\n      completed: PropTypes.bool,\n    }),\n  ).isRequired,\n  deleteAllCompleted: PropTypes.func.isRequired,\n  showActive: PropTypes.func.isRequired,\n  isAll: PropTypes.bool.isRequired,\n  isActive: PropTypes.bool.isRequired,\n  isCompleted: PropTypes.bool.isRequired,\n  showCompleted: PropTypes.func.isRequired,\n  showAll: PropTypes.func.isRequired,\n};\n\nexport default Footer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass TodoInput extends React.Component {\n  state = {\n    input: '',\n  };\n\n  handleAddInputValue = (event) => {\n    const { input } = this.state;\n\n    if (event.key === 'Enter' && input) {\n      event.preventDefault();\n      this.props.addTodo(input);\n      this.setState({ input: '' });\n    }\n  }\n\n  handleInputChange = (event) => {\n    const controlledInput = (event.target.value).trim();\n\n    this.setState({\n      input: controlledInput,\n    });\n  }\n\n  render() {\n    const { input } = this.state;\n\n    return (\n      <>\n        <form>\n          <input\n            onKeyPress={this.handleAddInputValue}\n            onChange={this.handleInputChange}\n            value={input}\n            type=\"text\"\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n          />\n        </form>\n      </>\n    );\n  }\n}\n\nTodoInput.propTypes = {\n  addTodo: PropTypes.func.isRequired,\n};\n\nexport default TodoInput;\n","import React from 'react';\nimport TodosContainer from './TodosContainer/TodosContainer';\nimport Footer from './Footer/Footer';\nimport TodoInput from './TodoInput/TodoInput';\n\nclass Todos extends React.Component {\n  state = {\n    todos: [],\n    activeTodos: [],\n    completedTodos: [],\n    allCompleted: false,\n    isAll: true,\n    isActive: false,\n    isCompleted: false,\n  };\n\n  handleAddTodo = (todo) => {\n    this.setState((prevState) => {\n      const { todos } = this.state;\n\n      todos.push({\n        id: todos.length === 0 ? `todo-${0}` : `todo-${todos.length}`,\n        text: todo,\n        completed: false,\n      });\n\n      return todos;\n    });\n  }\n\n  handleToggleCompletion = (id) => {\n    const { todos } = this.state;\n    const index = todos.map(todo => todo.id).indexOf(id);\n\n    const ifCompleted = todos[index].completed;\n\n    const setIncompleted = () => {\n      this.setState((prevState) => {\n        todos[index].completed = !todos[index].completed;\n\n        return todos;\n      });\n    };\n\n    const setCompleted = () => {\n      this.setState((prevState) => {\n        todos[index].completed = !todos[index].completed;\n\n        return todos;\n      });\n    };\n\n    ifCompleted ? setIncompleted() : setCompleted();\n  }\n\n  handleDeleteBtn = (id) => {\n    const { todos } = this.state;\n    const index = todos.map(todo => todo.id).indexOf(id);\n\n    this.setState((prevState) => {\n      delete todos[index];\n\n      return todos;\n    });\n  }\n\n  handleAllCompleted = () => {\n    const { todos, allCompleted } = this.state;\n\n    const firstClick = () => {\n      const completedTodos = todos.map((todo) => {\n        if (todo.completed === false) {\n          return {\n            ...todo,\n            completed: true,\n          };\n        }\n\n        return todo;\n      });\n\n      this.setState({\n        todos: [...completedTodos],\n        allCompleted: true,\n      });\n    };\n\n    const secondClick = () => {\n      const activeTodos = todos.map((todo) => {\n        if (todo.completed === true) {\n          return {\n            ...todo,\n            completed: false,\n          };\n        }\n\n        return todo;\n      });\n\n      this.setState({\n        todos: [...activeTodos],\n        allCompleted: false,\n      });\n    };\n\n    !allCompleted ? firstClick() : secondClick();\n  }\n\n  handleDeleteAllCompleted = () => {\n    const { todos } = this.state;\n\n    const filteredTodos = todos.filter(todo => !todo.completed);\n\n    this.setState(prevState => ({\n      completedTodos: [],\n      todos: filteredTodos,\n    }));\n  }\n\n  handleActiveFiltering = () => {\n    const { todos } = this.state;\n\n    const filteredActiveTodos = todos.filter(todo => !todo.completed);\n\n    this.setState(prevState => ({\n      activeTodos: filteredActiveTodos,\n      isAll: false,\n      isActive: true,\n      isCompleted: false,\n    }));\n  }\n\n  handleCompletedFiltering = () => {\n    const { todos } = this.state;\n\n    const filteredActiveTodos = todos.filter(todo => todo.completed);\n\n    this.setState(prevState => ({\n      completedTodos: filteredActiveTodos,\n      isAll: false,\n      isActive: false,\n      isCompleted: true,\n    }));\n  }\n\n  handleAllFiltering = () => {\n    const { todos } = this.state;\n\n    this.setState(prevState => ({\n      todos,\n      isAll: true,\n      isActive: false,\n      isCompleted: false,\n    }));\n  }\n\n  render() {\n    const { todos,\n      isAll,\n      isActive,\n      isCompleted,\n      activeTodos,\n      completedTodos } = this.state;\n\n    let conditionalRenderingTodos = todos;\n\n    if (!isAll && isActive && !isCompleted) {\n      conditionalRenderingTodos = activeTodos;\n    }\n\n    if (!isAll && !isActive && isCompleted) {\n      conditionalRenderingTodos = completedTodos;\n    }\n\n    let footer = null;\n\n    if (todos.length !== 0) {\n      footer = (\n        <Footer\n          todos={todos}\n          isAll={isAll}\n          isActive={isActive}\n          isCompleted={isCompleted}\n          deleteAllCompleted={this.handleDeleteAllCompleted}\n          showAll={this.handleAllFiltering}\n          showActive={this.handleActiveFiltering}\n          showCompleted={this.handleCompletedFiltering}\n        />\n      );\n    }\n\n    return (\n      <>\n        <section className=\"todoapp\">\n          <header className=\"header\">\n            <h1>todos</h1>\n            <TodoInput addTodo={this.handleAddTodo} />\n          </header>\n\n          <TodosContainer\n            toggleAllCompleted={() => this.handleAllCompleted()}\n            todos={conditionalRenderingTodos}\n            isCompleted={this.handleToggleCompletion}\n            deleteTodo={this.handleDeleteBtn}\n          />\n\n          {footer}\n\n        </section>\n      </>\n    );\n  }\n}\n\nexport default Todos;\n","import React from 'react';\nimport Todos from './Components/Todos/Todos';\n\nconst App = () => (\n  <section className=\"todoapp\">\n    <Todos />\n  </section>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}